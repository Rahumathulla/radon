/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.StaffDAO;
import com.essar.pojos.Staff;
import com.essar.pojos.Supplier;
import com.essar.utils.TableMouseListener;
import com.essar.utils.GenericUtils;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rahumathulla
 */
public class StaffForm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ProductCategory
     */
    long customerId=0;
    DefaultTableModel customerModel = null;
    public StaffForm() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mnuCustomer = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        pnlCustomer = new javax.swing.JPanel();
        panStaff = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        lblCount = new javax.swing.JLabel();
        lblStaffName = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtStaffPhone = new javax.swing.JTextField();
        txtStaffName = new javax.swing.JTextField();
        lblStaffType = new javax.swing.JLabel();
        cmbStaffType = new javax.swing.JComboBox<>();
        lblRatePerHour = new javax.swing.JLabel();
        txtRatePerHour = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        dtpJoiningDate = new com.toedter.calendar.JDateChooser();
        lblServiceStartDate = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        mitDelete.setText("jMenuItem1");

        mitEdit.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Staff Register");
        setName("frmProductCategory"); // NOI18N

        panStaff.setBackground(new java.awt.Color(0, 102, 102));
        panStaff.setForeground(new java.awt.Color(0, 153, 153));

        tblStaff.setForeground(new java.awt.Color(0, 102, 102));
        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff Name", "Staff Type", "Rate/Hour", "Phone Number", "Address", "Joining Date", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        panStaff.setViewportView(tblStaff);

        lblCount.setForeground(new java.awt.Color(102, 102, 255));
        lblCount.setText("Count:");

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCount, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        lblStaffName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStaffName.setText("Staff Name");

        lblPhoneNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPhoneNumber.setText("Phone Number");

        lblAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAddress.setText("Address");

        txtAddress.setColumns(16);
        txtAddress.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtAddress.setRows(3);
        txtAddress.setTabSize(2);
        txtAddress.setToolTipText("");
        txtAddress.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtAddress);

        txtStaffPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtStaffPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStaffPhoneActionPerformed(evt);
            }
        });

        txtStaffName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblStaffType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStaffType.setText("Staff Type");

        cmbStaffType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teaching", "Non-teaching" }));

        lblRatePerHour.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblRatePerHour.setText("Rate/Hour");

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        dtpJoiningDate.setDateFormatString("dd/MM/yyyy");

        lblServiceStartDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblServiceStartDate.setText("Joining Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRatePerHour, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRatePerHour, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStaffType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(cmbStaffType, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblServiceStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(txtStaffPhone)
                            .addComponent(dtpJoiningDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(dtpJoiningDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStaffType, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbStaffType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStaffPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblRatePerHour, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtRatePerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnCancel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblServiceStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(btnSave.getText().equalsIgnoreCase("add")){
            if(null==dtpJoiningDate.getDate()){
                dtpJoiningDate.setDate(new Date());
            }
            btnSave.setText("Save");
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
            enableFormElements(true);
            txtStaffName.requestFocus();
        }else{
            if(validateForm()){
                if(customerId>0)
                    updateCustomerForm();
                else
                    saveCustomerForm();
                initializeForm();

            }   

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtStaffPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStaffPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStaffPhoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffForm().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        DefaultTableModel model = (DefaultTableModel) tblStaff.getModel();
        model.setRowCount(0);
        
        btnSave.setText("Add");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png")));
        btnSave.requestFocus();
        txtStaffName.setText("");
        txtStaffPhone.setText("");
        txtAddress.setText("");
     
        //tblProductCategory.re();
        //tblCategory.remove(panPricingTier);
        enableFormElements(false);
        StaffDAO customerDAO = new StaffDAO();
        renderDataIntoTable(customerDAO.retrieveAll());
        mnuCustomer = new JPopupMenu();
        
        mitEdit = new JMenuItem("Edit");
        mitEdit.addActionListener(this);
        
        mitDelete = new JMenuItem("Delete");
        mitDelete.addActionListener(this);
        
        mnuCustomer.add(mitEdit);
        mnuCustomer.add(mitDelete);
         // sets the popup menu for the table
        tblStaff.setComponentPopupMenu(mnuCustomer);      
        tblStaff.addMouseListener(new TableMouseListener(tblStaff));
        
        TableColumn idColumn1 = tblStaff.getColumnModel().getColumn(tblStaff.getColumnCount()-1);
        idColumn1.setPreferredWidth(0);
        idColumn1.setMinWidth(0);
        idColumn1.setMaxWidth(0);
        
        TableColumn joiningDateCol = tblStaff.getColumnModel().getColumn(tblStaff.getColumnCount()-2);
        joiningDateCol.setPreferredWidth(60);
        joiningDateCol.setMinWidth(60);
        
        TableColumn addressColumn = tblStaff.getColumnModel().getColumn(tblStaff.getColumnCount()-3);
        addressColumn.setPreferredWidth(400);
        addressColumn.setMinWidth(400);
        //idColumn1.setMaxWidth(0);
        
        TableColumn phoneNumberColumn = tblStaff.getColumnModel().getColumn(1);
        phoneNumberColumn.setPreferredWidth(60);
        phoneNumberColumn.setMinWidth(60);
        
        TableColumn customerNameColumn = tblStaff.getColumnModel().getColumn(0);
        customerNameColumn.setPreferredWidth(200);
        customerNameColumn.setMinWidth(200);
        customerNameColumn.setMaxWidth(200);
        customerId =0;
   
    }
    
    public void enableFormElements(boolean flag){
        txtStaffName.setEnabled(flag);
        txtStaffPhone.setEnabled(flag);
        txtAddress.setEnabled(flag);
        txtRatePerHour.setEditable(flag);
        cmbStaffType.setEnabled(flag);
        dtpJoiningDate.setEnabled(flag);
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();
        if(null == txtStaffName.getText()){
            JOptionPane.showMessageDialog(null, "Staff Name "+txtStaffName.getText() +" is not valid.");
            return false;
        }
        if(null == txtStaffPhone.getText() || txtStaffPhone.getText().length()<10){  
            JOptionPane.showMessageDialog(null, "Phone Number is invalid.");
            return false;
        }
        if(null == txtRatePerHour.getText() || !(txtRatePerHour.getText().matches("^\\d*\\.\\d+|\\d+|\\d+\\.\\d*$"))){
            JOptionPane.showMessageDialog(null, "Rate/Hour value is invalid.");
            return false;
        }
        //txtProductCategoryName.setText("");
        return true;
    }
    
    public void saveCustomerForm(){
 
        Staff staff = new Staff();
        staff.setStaffName(txtStaffName.getText());
        staff.setStaffType(cmbStaffType.getSelectedItem().toString());
        staff.setRatePerHour(Double.parseDouble(txtRatePerHour.getText().trim()));
        staff.setPhoneNumber(txtStaffPhone.getText().trim());        
        staff.setAddress(txtAddress.getText());
        staff.setJoiningDate(dtpJoiningDate.getDate());
        StaffDAO staffDAO = new StaffDAO();
        staffDAO.insertIntoDB(staff);
        
    }
    public void updateCustomerForm(){
 
        Staff staff = new Staff();
        staff.setStaffId(customerId);
        staff.setStaffName(txtStaffName.getText());
        staff.setStaffType(cmbStaffType.getSelectedItem().toString());
        staff.setPhoneNumber(txtStaffPhone.getText().trim());
        staff.setAddress(txtAddress.getText());
        staff.setRatePerHour(Double.parseDouble(txtRatePerHour.getText().trim()));
        staff.setJoiningDate(dtpJoiningDate.getDate());
        StaffDAO customerDAO = new StaffDAO();
        customerDAO.updateRecord(staff);
        
    }
    
    
    public void renderDataIntoTable(List<Staff> staffList){
        
        customerModel = (DefaultTableModel) tblStaff.getModel();
        TableColumn column = tblStaff.getColumnModel().getColumn(tblStaff.getColumnCount()-1);
        column.setMaxWidth(0);
        column.setWidth(0);
        column.setPreferredWidth(0);
        
        TableColumn staffNameCol = tblStaff.getColumnModel().getColumn(0);
        staffNameCol.setPreferredWidth(120);
        staffNameCol.setMaxWidth(120);
        
        TableColumn staffTypeCol = tblStaff.getColumnModel().getColumn(1);
        staffTypeCol.setMinWidth(120);
        
        TableColumn staffRateCol = tblStaff.getColumnModel().getColumn(2);
        staffRateCol.setMinWidth(60);
        
        TableColumn staffPhoneCol = tblStaff.getColumnModel().getColumn(3);
        staffPhoneCol.setMinWidth(120);
        
        TableColumn staffAddressCol = tblStaff.getColumnModel().getColumn(4);
        staffAddressCol.setMinWidth(200);
        staffAddressCol.setMaxWidth(240);
        lblCount.setText("Count : "+staffList.size());
        //pricingTierModel.getColumnName(3).
        //System.out.println("-----"+pricingTierList.size());
        for(int i=0;i<staffList.size();i++){
        customerModel.addRow(new Object[]{staffList.get(i).getStaffName(),staffList.get(i).getStaffType(),staffList.get(i).getRatePerHour(),staffList.get(i).getPhoneNumber(),staffList.get(i).getAddress(),staffList.get(i).getJoiningDate(),staffList.get(i).getStaffId()});
        //model.
        }
        
        tblStaff.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                if (me.getClickCount() == 2) {     // to detect doble click events
                    syncDataFromViewToTable();
                }
            }
        });
        
    }
    public void syncDataFromViewToTable(){
                //int rowIndex = tblSupplier.getSelectedRow();
        Staff staff = null;
        System.out.println("--------INSIDE Edit-"+tblStaff.getModel().getValueAt(tblStaff.getSelectedRow(),0));
        customerId = Integer.parseInt(tblStaff.getModel().getValueAt(tblStaff.getSelectedRow(),tblStaff.getColumnCount()-1).toString());
        StaffDAO customerDAO = new StaffDAO();
        staff = customerDAO.retrieveById(customerId);
        System.out.println("--"+staff.getStaffName());
        txtStaffName.setText(staff.getStaffName());
         for(int i=0; i<cmbStaffType.getItemCount();i++){
            if((cmbStaffType.getSelectedItem().toString()).equalsIgnoreCase(staff.getStaffType())){
                cmbStaffType.setSelectedItem(cmbStaffType.getItemAt(i));
            }
        }
        cmbStaffType.setSelectedItem(staff.getStaffType());
        txtRatePerHour.setText(staff.getRatePerHour()+"");
        txtStaffPhone.setText(staff.getPhoneNumber()+"");
        txtAddress.setText(staff.getAddress());
        dtpJoiningDate.setDate(staff.getJoiningDate());
        enableFormElements(true);
        //btnSave.setText("Save");
        //btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
        btnSave.setText("Update");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbStaffType;
    private com.toedter.calendar.JDateChooser dtpJoiningDate;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblRatePerHour;
    private javax.swing.JLabel lblServiceStartDate;
    private javax.swing.JLabel lblStaffName;
    private javax.swing.JLabel lblStaffType;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JPopupMenu mnuCustomer;
    private javax.swing.JScrollPane panStaff;
    private javax.swing.JPanel pnlCustomer;
    private javax.swing.JTable tblStaff;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtRatePerHour;
    private javax.swing.JTextField txtStaffName;
    private javax.swing.JTextField txtStaffPhone;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();
            if (menu == mitDelete) {
                //int rowIndex = tblPricingTier.getSelectedRow();
                System.out.println("--------INSIDE DELETE-"+tblStaff.getModel().getValueAt(tblStaff.getSelectedRow(),0));
                String customerId = tblStaff.getModel().getValueAt(tblStaff.getSelectedRow(),tblStaff.getColumnCount()-1).toString();
                long id = Long.parseLong(customerId);
                StaffDAO staffDAO = new StaffDAO();
                staffDAO.deleteRecordById(id);
                GenericUtils.removeRowFromJTable(tblStaff, customerModel);
            }
            if (menu == mitEdit) {
                syncDataFromViewToTable();
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
}
