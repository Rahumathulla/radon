/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.SchoolDAO;
import com.essar.utils.TableMouseListener;
import com.essar.pojos.School;
import com.essar.utils.GenericUtils;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rahumathulla
 */
public class SchoolForm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ProductCategory
     */
    int schoolId=0;
    DefaultTableModel schoolModel = null;
    public SchoolForm() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mnuSchool = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        pnlSchool = new javax.swing.JPanel();
        lblSchoolName = new javax.swing.JLabel();
        txtSchoolName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        spnSchoolDetails = new javax.swing.JScrollPane();
        tblSchool = new javax.swing.JTable();
        lblSchoolAddress = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSchoolAddress = new javax.swing.JTextArea();
        lblCount = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        lblComments = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        mitDelete.setText("jMenuItem1");

        mitEdit.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("School Details");
        setIconImage(getIconImage());
        setName("frmProductCategory"); // NOI18N

        lblSchoolName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSchoolName.setText("School Name");

        txtSchoolName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        tblSchool.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "School Name", "School Address", "Comments", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spnSchoolDetails.setViewportView(tblSchool);

        lblSchoolAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSchoolAddress.setText("School Address");

        txtSchoolAddress.setColumns(10);
        txtSchoolAddress.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtSchoolAddress.setRows(3);
        txtSchoolAddress.setTabSize(3);
        jScrollPane3.setViewportView(txtSchoolAddress);

        lblCount.setForeground(new java.awt.Color(102, 102, 255));
        lblCount.setText("Count:");

        txtComments.setColumns(10);
        txtComments.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtComments.setRows(3);
        txtComments.setTabSize(3);
        jScrollPane4.setViewportView(txtComments);

        lblComments.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblComments.setText("Comments");

        javax.swing.GroupLayout pnlSchoolLayout = new javax.swing.GroupLayout(pnlSchool);
        pnlSchool.setLayout(pnlSchoolLayout);
        pnlSchoolLayout.setHorizontalGroup(
            pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSchoolLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSchoolLayout.createSequentialGroup()
                        .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlSchoolLayout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel))
                            .addGroup(pnlSchoolLayout.createSequentialGroup()
                                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlSchoolLayout.createSequentialGroup()
                                        .addComponent(lblSchoolAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSchoolLayout.createSequentialGroup()
                                        .addComponent(lblComments, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlSchoolLayout.createSequentialGroup()
                        .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spnSchoolDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCount, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlSchoolLayout.createSequentialGroup()
                                .addComponent(lblSchoolName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(txtSchoolName, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlSchoolLayout.setVerticalGroup(
            pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSchoolLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSchoolName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSchoolName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSchoolAddress)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblComments))
                .addGap(24, 24, 24)
                .addGroup(pnlSchoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnSchoolDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSchool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(btnSave.getText().equalsIgnoreCase("add")){
            btnSave.setText("Save");
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
            enableFormElements(true);
        }else{
            //Implement Save Logic
            if(validateForm()){
                if(schoolId>0)
                    updateSchoolForm();
                else
                    saveSchoolForm();
                initializeForm();               
                
            }           
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchoolForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchoolForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchoolForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchoolForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SchoolForm().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        schoolId=0;
        DefaultTableModel model = (DefaultTableModel) tblSchool.getModel();
        model.setRowCount(0);
        
        btnSave.setText("Add");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png")));
        btnSave.requestFocus();
        txtSchoolName.setText("");
        txtSchoolAddress.setText("");
        txtComments.setText("");
        
        enableFormElements(false);
        SchoolDAO schoolDAO = new SchoolDAO();
        renderDataIntoTable(schoolDAO.retrieveAll());
        mnuSchool = new JPopupMenu();
        
        mitEdit = new JMenuItem("Edit");
        mitEdit.addActionListener(this);
        
        mitDelete = new JMenuItem("Delete");
        mitDelete.addActionListener(this);
        
        mnuSchool.add(mitEdit);
        mnuSchool.add(mitDelete);
       
         // sets the popup menu for the table
        tblSchool.setComponentPopupMenu(mnuSchool);      
        tblSchool.addMouseListener(new TableMouseListener(tblSchool));
        
        TableColumn idColumn1 = tblSchool.getColumnModel().getColumn(tblSchool.getColumnCount()-1);
        idColumn1.setPreferredWidth(0);
        idColumn1.setMinWidth(0);
        idColumn1.setMaxWidth(0);
        
        TableColumn addressColumn = tblSchool.getColumnModel().getColumn(tblSchool.getColumnCount()-2);
        addressColumn.setPreferredWidth(400);
        addressColumn.setMinWidth(400);
        addressColumn.setMaxWidth(400);
        
        TableColumn schoolNameColumn = tblSchool.getColumnModel().getColumn(1);
        schoolNameColumn.setPreferredWidth(200);
        schoolNameColumn.setMinWidth(200);
        schoolNameColumn.setMaxWidth(200);
   
    }
    
    public void enableFormElements(boolean flag){
        txtSchoolName.setEnabled(flag);
        txtSchoolAddress.setEnabled(flag);
        txtComments.setEnabled(flag);
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();

        if(null == txtSchoolName.getText()){
            JOptionPane.showMessageDialog(null, "School name "+txtSchoolName.getText() +" is not valid.");
            return false;
        }
        //txtProductCategoryName.setText("");
        return true;
    }
    
    public void saveSchoolForm(){
 
        School school = new School();
        school.setSchoolName(txtSchoolName.getText());
        school.setSchoolAddress(txtSchoolAddress.getText());
        school.setComments(txtComments.getText());
        SchoolDAO schoolDAO = new SchoolDAO();
        schoolDAO.insertIntoDB(school);
        
    }
    
    public void updateSchoolForm(){
 
        School school = new School();
        school.setSchoolId(schoolId);
        school.setSchoolName(txtSchoolName.getText());
        school.setSchoolAddress(txtSchoolAddress.getText());
        school.setComments(txtComments.getText());
        SchoolDAO schoolDAO = new SchoolDAO();
        schoolDAO.updateRecord(school);
        
    }
    public void syncDataFromViewToTable(){
        School school = null;
        System.out.println("--------INSIDE Edit-"+tblSchool.getModel().getValueAt(tblSchool.getSelectedRow(),0));
        schoolId = Integer.parseInt(tblSchool.getModel().getValueAt(tblSchool.getSelectedRow(),tblSchool.getColumnCount()-1).toString());
        SchoolDAO schoolDAO = new SchoolDAO();
        school = schoolDAO.retrieveById(schoolId);
        System.out.println("--"+school.getSchoolName());
        txtSchoolName.setText(school.getSchoolName());
        txtSchoolAddress.setText(school.getSchoolAddress());
        txtComments.setText(school.getComments());
        enableFormElements(true);
        btnSave.setText("Update");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png")));
    }
    public void renderDataIntoTable(List<School> schoolList){
        
        schoolModel = (DefaultTableModel) tblSchool.getModel();
        System.out.println("-----Count:"+schoolList.size());
        lblCount.setText("Count : "+schoolList.size());
        for(int i=0;i<schoolList.size();i++){
        schoolModel.addRow(new Object[]{schoolList.get(i).getSchoolName(),schoolList.get(i).getSchoolAddress(), schoolList.get(i).getComments(), schoolList.get(i).getSchoolId()});
        //model.
        }
        
        tblSchool.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                if (me.getClickCount() == 2) {     // to detect doble click events
                    syncDataFromViewToTable();
                }
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblSchoolAddress;
    private javax.swing.JLabel lblSchoolName;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JPopupMenu mnuSchool;
    private javax.swing.JPanel pnlSchool;
    private javax.swing.JScrollPane spnSchoolDetails;
    private javax.swing.JTable tblSchool;
    private javax.swing.JTextArea txtComments;
    private javax.swing.JTextArea txtSchoolAddress;
    private javax.swing.JTextField txtSchoolName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();
            if (menu == mitDelete) {
                //int rowIndex = tblSchool.getSelectedRow();
                System.out.println("--------INSIDE DELETE-"+tblSchool.getModel().getValueAt(tblSchool.getSelectedRow(),0));
                long schoolId = Long.parseLong(tblSchool.getModel().getValueAt(tblSchool.getSelectedRow(),tblSchool.getColumnCount()-1).toString());
                SchoolDAO schoolDAO = new SchoolDAO();
                schoolDAO.deleteRecordById(schoolId);
                // Bug Fix for row doubling during table record deletion
                GenericUtils.removeRowFromJTable(tblSchool, schoolModel);
            } 
            
            if (menu == mitEdit) {
                //int rowIndex = tblSchool.getSelectedRow();
                syncDataFromViewToTable();                
            } 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
}

